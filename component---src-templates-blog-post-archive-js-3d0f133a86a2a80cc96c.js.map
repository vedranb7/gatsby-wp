{"version":3,"file":"component---src-templates-blog-post-archive-js-3d0f133a86a2a80cc96c.js","mappings":"2KAqDA,IA3CY,WAAO,IAAD,EACRA,GAAWC,EAAAA,EAAAA,gBAAe,aAA1BD,OAcFE,EAAYF,SAAH,UAAGA,EAAQG,cAAX,aAAG,EAAgBC,IAElC,OACE,uBAAKC,UAAU,OACZH,GACC,uBACEI,KAAKN,aAAA,EAAAA,EAAQO,YAAR,GACLF,UAAU,aACVG,IAAKN,KAGRF,aAAA,EAAAA,EAAQO,YACP,uCACa,8BAASP,EAAOO,WAD7B,KAGGP,aAAA,EAAAA,EAAQS,cAAe,KAH1B,KAKGT,aAAA,EAAAA,EAAQU,UACP,qBAAGC,KAAI,yBAAyBX,aAAA,EAAAA,EAAQU,UAAR,KAAhC,sCAQX,C,8FCmBD,UA9DkB,SAAC,GAGZ,IAFLE,EAEI,EAFJA,KAEI,IADJC,YAAeC,EACX,EADWA,aAAcC,EACzB,EADyBA,iBAEvBC,EAAQJ,EAAKK,UAAUC,MAE7B,OAAKF,EAAMG,OAcT,gBAAC,IAAD,CAAQC,YAAU,GAChB,gBAAC,IAAD,CAAKC,MAAM,cAEX,gBAAC,IAAD,MAEA,sBAAIC,MAAO,CAAEC,UAAU,SACpBP,EAAMQ,KAAI,SAAAC,GACT,IAAMJ,EAAQI,EAAKJ,MAEnB,OACE,sBAAIK,IAAKD,EAAKE,KACZ,2BACEtB,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIN,EAAKE,IAAKK,SAAS,OAC3B,wBAAMA,SAAS,aAAYC,EAAAA,EAAAA,IAAMZ,MAGrC,6BAAQI,EAAKS,OAEf,2BAASF,SAAS,gBAAeC,EAAAA,EAAAA,IAAMR,EAAKU,WAInD,KAGFpB,GACC,gCACE,gBAAC,EAAAe,KAAD,CAAMC,GAAIhB,GAAV,iBACA,4BAGHD,GAAgB,gBAAC,EAAAgB,KAAD,CAAMC,GAAIjB,GAAV,cAjDjB,gBAAC,IAAD,CAAQM,YAAU,GAChB,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,2GAiDP,C","sources":["webpack://gatsby-starter-wordpress-blog/./src/components/bio.js","webpack://gatsby-starter-wordpress-blog/./src/templates/blog-post-archive.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Bio = () => {\r\n  const { author } = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      # if there was more than one user, this would need to be filtered\r\n      author: wpUser {\r\n        firstName\r\n        twitter: name\r\n        description\r\n        avatar {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const avatarUrl = author?.avatar?.url\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {avatarUrl && (\r\n        <img\r\n          alt={author?.firstName || ``}\r\n          className=\"bio-avatar\"\r\n          src={avatarUrl}\r\n        />\r\n      )}\r\n      {author?.firstName && (\r\n        <p>\r\n          Written by <strong>{author.firstName}</strong>\r\n          {` `}\r\n          {author?.description || null}\r\n          {` `}\r\n          {author?.twitter && (\r\n            <a href={`https://twitter.com/${author?.twitter || ``}`}>\r\n              You should follow them on Twitter\r\n            </a>\r\n          )}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport parse from \"html-react-parser\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({\r\n  data,\r\n  pageContext: { nextPagePath, previousPagePath },\r\n}) => {\r\n  const posts = data.allWpPost.nodes\r\n\r\n  if (!posts.length) {\r\n    return (\r\n      <Layout isHomePage>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add posts to your WordPress site and they'll\r\n          appear here!\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout isHomePage>\r\n      <Seo title=\"All posts\" />\r\n\r\n      <Bio />\r\n\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.title\r\n\r\n          return (\r\n            <li key={post.uri}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.uri} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{parse(title)}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.date}</small>\r\n                </header>\r\n                <section itemProp=\"description\">{parse(post.excerpt)}</section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n\r\n      {previousPagePath && (\r\n        <>\r\n          <Link to={previousPagePath}>Previous page</Link>\r\n          <br />\r\n        </>\r\n      )}\r\n      {nextPagePath && <Link to={nextPagePath}>Next page</Link>}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\r\n    allWpPost(\r\n      sort: { fields: [date], order: DESC }\r\n      limit: $postsPerPage\r\n      skip: $offset\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        uri\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["author","useStaticQuery","avatarUrl","avatar","url","className","alt","firstName","src","description","twitter","href","data","pageContext","nextPagePath","previousPagePath","posts","allWpPost","nodes","length","isHomePage","title","style","listStyle","map","post","key","uri","itemScope","itemType","Link","to","itemProp","parse","date","excerpt"],"sourceRoot":""}